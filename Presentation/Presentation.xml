<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Presentation</name>
  </assembly>
  <members>
    <member name="T:Presentation.Controllers.ApiController">
      <summary>
        Represents the base API controller.
      </summary>
    </member>
    <member name="P:Presentation.Controllers.ApiController.Sender">
      <summary>
        Gets the sender.
      </summary>
    </member>
    <member name="T:Presentation.Controllers.OrdersController">
      <summary>
        Represents the orders controller.
      </summary>
    </member>
    <member name="M:Presentation.Controllers.OrdersController.GetOrder(System.Guid,System.Threading.CancellationToken)">
      <summary>
        Gets the order with the specified identifier, if it exists.
      </summary>
      <param name="orderId">The order identifier.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The order with the specified identifier, if it exists.</returns>
    </member>
    <member name="M:Presentation.Controllers.OrdersController.CreateOrder(Application.Orders.Commands.CreateOrder.CreateOrderRequest,System.Threading.CancellationToken)">
      <summary>
        Creates a new order based on the specified request.
      </summary>
      <param name="request">The create order request.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The identifier of the newly created order.</returns>
    </member>
    <member name="M:Presentation.Controllers.OrdersController.UpdateOrder(Application.Orders.Commands.UpdateOrder.UpdateOrderRequest,System.Threading.CancellationToken)">
      <summary>
        Updates an order based on the specified request.
      </summary>
      <param name="request">The update order request.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>The updated order.</returns>
    </member>
    <member name="M:Presentation.Controllers.OrdersController.CancelOrder(Application.Orders.Commands.CancelOrder.CancelOrderRequest,System.Threading.CancellationToken)">
      <summary>
        Cancels an order based on the specified request.
      </summary>
      <param name="request">The cancel order request.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>If the order was cancelled successfully.</returns>
    </member>
    <member name="M:Presentation.Controllers.OrdersController.DeleteOrder(Application.Orders.Commands.DeleteOrder.DeleteOrderRequest,System.Threading.CancellationToken)">
      <summary>
        Deletes an order based on the specified request.
      </summary>
      <param name="request">The delete order request.</param>
      <param name="cancellationToken">The cancellation token.</param>
      <returns>If the order was deleted successfully.</returns>
    </member>
  </members>
</doc>